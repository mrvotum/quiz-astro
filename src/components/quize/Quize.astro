---
import InputComponent from '../../components/inputComponent/InputComponent.astro';
export interface props {
	questionBlocks: Array<QuestionBlock>
}
export interface QuestionBlock {
	blockId: number,
	quizTitle: string,
	questions: Array<Question>
}
export interface Question {
	questionId: number,
	question: string,
	description: string,
	isLastQuestion?: boolean,
	isLastQuestionsGroup?: boolean
}
const { quiz } = Astro.props;
---

<div class="quiz quiz--disabled">
	<div class="quiz__form">
		<InputComponent inputId="personName" inputPlaceholder="Name" client:load />
		<InputComponent inputId="personSurname" inputPlaceholder="Surname" client:load />
		<button class="btn" data-btn="quiz-start" type="submit">Start</button>
		<br><button class="btn" data-btn="quiz-random" type="submit">Рандомные данные</button>
	</div>
	{ quiz.map((questionsBlock) => {
		return (
			// data-quiz-list указывает на блок вопросов
			<div class="quiz__list quiz__list--hidden" data-quiz-list={questionsBlock.blockId}>
				<h2 class="quiz__title">{questionsBlock.quizTitle}</h2>

				{ questionsBlock.questions.map((question, questionIndex) => {
					const id = question.questionId;
					const isHidden = questionIndex > 0 ? 'quiz__question--hidden' : '';
					const createNextBtn = questionIndex + 1 === questionsBlock.questions.length ? 'last-question-in-block' : '';

					return (
						// data-questions-block - указывает к какому блоку вопросов относится вопрос
						<div class={`quiz__question ${isHidden} ${createNextBtn}`} data-question={`question-${id}`} data-questions-block={questionsBlock.blockId}>
							<h3>{question.question}</h3>
							<p>{question.description}</p>

							<div class="answers"></div>
						</div>
					);
				}) }
			</div>
		);
	}) }
</div>

<script>
	import QuizForm from './main.js';

	// Инициализация класса
	const quizFormEl = document.querySelector(".quiz");
	const quizForm = new QuizForm(quizFormEl);
	quizForm.init();
</script>